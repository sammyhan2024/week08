name: Frontend CI/CD - Improved Consolidated Workflow

# IMPROVEMENT 1: Modern branching strategy with PR validation
on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  
  # NEW: Pull request validation
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  
  # Manual deployment trigger
  workflow_dispatch:
    inputs:
      aks_cluster_name:
        description: 'Name of the AKS Cluster to deploy to'
        required: true
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io

jobs:
  # IMPROVEMENT 2: Basic validation for frontend (can be expanded)
  validate_frontend:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Validate HTML syntax
        run: |
          echo "Validating frontend files..."
          # Basic validation - can be expanded with proper linting
          find frontend/ -name "*.html" -exec echo "Checking {}" \;
          find frontend/ -name "*.js" -exec echo "Checking {}" \;
          echo "Frontend validation completed"

  # IMPROVEMENT 3: Conditional build (only on main branch)
  build_and_push:
    runs-on: ubuntu-latest
    needs: validate_frontend
    # Only build on merge to main, not on PR
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    
    # IMPROVEMENT 4: Output image tag for consistent deployment
    outputs:
      image_tag: ${{ steps.vars.outputs.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # IMPROVEMENT 5: Single Azure login (reduces duplication)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Set image tag output
        id: vars
        run: echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }} ./frontend/
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}

      - name: Logout from Azure
        if: always()
        run: az logout

  # IMPROVEMENT 6: Linked deployment with automatic tag management
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    # Only deploy when manually triggered
    if: github.event_name == 'workflow_dispatch'
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ github.event.inputs.aks_resource_group }}
          cluster-name: ${{ github.event.inputs.aks_cluster_name }}
      
      # IMPROVEMENT 7: Use build output for consistent versioning
      - name: Update image tag in manifest using build output
        run: |
          echo "Updating frontend manifest with image tag: ${{ needs.build_and_push.outputs.image_tag }}"
          sed -i "s|/frontend:.*|/frontend:${{ needs.build_and_push.outputs.image_tag }}|g" k8s/frontend.yaml
          echo "--- Updated frontend.yaml content ---"
          grep "image:" k8s/frontend.yaml
          echo "---------------------------------"

      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend with updated image tag..."
          kubectl apply -f k8s/frontend.yaml

      - name: Logout from Azure
        if: always()
        run: az logout